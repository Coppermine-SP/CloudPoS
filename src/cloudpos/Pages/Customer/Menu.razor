@attribute [Authorize(Policy = AuthorizationHandler.ActiveSessionPolicy)]
@page "/customer/menu"
@layout Shared.CustomerPageLayout
<PageTitle>@config.StoreName - 메뉴</PageTitle>
    <div id="category-wrapper" class="category-wrapper">
        <div class="scroll-arrow left d-none" id="cat-arrow-left"><i class="bi bi-chevron-left"></i></div>
        <div class="fade-edge left d-none rounded-start-5" id="cat-fade-left"></div>
        <div id="category-container" class="category-scroll bg-body-tertiary rounded-5 shadow @(_categories is null ? "d-none" : "")">
            <div class="gap-1 text-nowrap category-list d-inline-flex">
                @if (_categories is not null)
                {
                    @foreach (var c in _categories)
                    {
                        <div role="button"
                             class="category-item @(_selectedCategoryId == c.CategoryId ? "active" : "")"
                             @onclick="() => OnCategorySelected(c.CategoryId)" data-cat-id="@c.CategoryId">
                            @(c.Name) (@c.Items.Count)
                        </div>
                    }
                }
            </div>
        </div>
        <div class="scroll-arrow right d-none" id="cat-arrow-right"><i class="bi bi-chevron-right"></i></div>
        <div class="fade-edge right d-none rounded-end-5" id="cat-fade-right"></div>
    </div>
<div class="d-grid mt-3 mb-5 gap-4 card-grid">
    @if (_categories is not null)
    {
        @foreach (var item in _categories.First(x => x.CategoryId == _selectedCategoryId).Items)
        {
            <div class="card shadow item" @onclick="() => ShowItemDetailAsync(item)">
                <div class="ratio ratio-16x9">
                    <img src="@(item.ImageId is null ? "/images/default_item_image.jpg" : GetImageUrl(item.ImageId.Value))" class="card-img-top object-fit-cover" alt="">
                </div>
                <div class="card-body d-flex justify-content-between flex-column">
                    <div>
                        <h6 class="card-title">@item.Name</h6>
                        <p class="card-text text-secondary">@(String.IsNullOrWhiteSpace(item.Description) ? "메뉴 설명이 없습니다." : item.Description)</p>
                    </div>
                    <div class="d-flex justify-content-between align-items-center">
                        <p class="mb-0">@CurrencyFormat(item.Price)</p>
                        @if (item.IsAvailable)
                        {
                            <div @onclick:stopPropagation="true">
                                <button role="button" class="btn btn-primary" @onclick="() => AddToCart(item)">담기</button>
                                </div>
                        }
                        else
                        {
                            <div class="text-secondary" style="margin: 7px 0;">품절</div>
                        }
                    </div>
                </div>
            </div>
        }
    }
</div>
    <div class="container px-0 fixed-bottom">
        <div class="bg-body-tertiary rounded-5 px-3 py-2 mx-4 mb-2 shadow">
            <div class="d-flex justify-content-between align-items-center">
                <button class="cart-toggle btn p-0 border-0 bg-transparent"
                        @onclick="ToggleCart">
                    <i class="bi @(_isCartOpen ? "bi-chevron-down" : "bi-chevron-up") me-2"></i>
                    주문서
                </button>
                <div class="d-flex flex-row align-items-center">
                    <div class="me-2">
                        @if (_cart.Count != 0)
                        {
                            <p class="text-muted mb-0">@CurrencyFormat(_cart.Sum(x => x.Quantity * x.Item.Price)) (메뉴 @(_cart.Count)개)</p>
                        }
                        else
                        {
                            <p class="text-muted mb-0">비어있음</p>
                        }
                    </div>
                    <button class="btn btn-success rounded-5" disabled="@(_cart.Count == 0)" @onclick="CheckoutAsync">주문하기</button>
                </div>
            </div>
            <div class="cart-panel @(_isCartOpen ? "open" : "") overflow-y-auto">
                @if (_cart.Count == 0)
                {
                    <div class="d-flex flex-column align-items-center h-100 justify-content-center">
                        <i class="text-secondary bi bi-exclamation-triangle text-center" style="font-size: 4rem"></i>
                        <p class="text-secondary text-center">주문서가 비었습니다.</p>
                    </div>
                }
                else
                {
                    @foreach (var x in _cart)
                    {
                        <div class="border-bottom py-2 d-flex justify-content-between">
                            <div class="d-flex align-items-center">
                                <button class="btn btn p-0 border-0 bg-transparent me-2" @onclick="() => RemoveFromCart(x)"><i class="bi bi-x"></i></button>
                                <span class="me-1">@x.Item.Name</span>
                            </div>
                            <div class="d-flex">
                                <span class="text-secondary me-3" style="line-height: 1.8">@CurrencyFormat(@x.Item.Price * x.Quantity)</span>
                                <button class="cart-toggle btn p-0 border-0 bg-transparent" @onclick="() => SubItemQuantity(x)">
                                    <i class="bi bi-dash" style="font-size: 1.2rem"></i>
                                </button>
                                <div class="form-control px-2 py-0 text-center mx-1" style="font-size: 14px;width: 32px;line-height: 1.8">@x.Quantity</div>
                                <button class="cart-toggle btn p-0 border-0 bg-transparent" @onclick="() => AddItemQuantity(x)">
                                    <i class="bi bi-plus" style="font-size: 1.2rem"></i>
                                </button>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>