@attribute [Authorize(Roles = AuthorizationHandler.AdminRole)]
@page "/administrative/tableview"
@using CloudInteractive.CloudPos.Components.TableView
@using Microsoft.EntityFrameworkCore
@layout Shared.AdminPageLayout
@code
{
    enum OptionContent {SessionManagement, ManualOrder}
    private OptionContent _selectedOption = OptionContent.SessionManagement;
    private const string OptionClass = "btn-outline-secondary border-0";
    private const string SelectedOptionClass = "btn-secondary";

    private const string ActiveTableItemClass = "bg-primary bg-opacity-75";
    private const string EndTableItemClass = "bg-success bg-opacity-75";
    private const string EmptyTableItemClass = "bg-dark bg-opacity-75";
    private string SessionStateToClass(TableSession.SessionState state) =>
        state == TableSession.SessionState.Active ? ActiveTableItemClass : EndTableItemClass;
}
<PageTitle>@(config.StoreName) - 테이블 뷰</PageTitle>
@if (_sessions is not null && _tables is not null)
{
    <div class="full-height">
        <div class="d-flex h-100 justify-content-between">
            <main class="flex-grow-1 d-flex flex-column">
                <div class="d-lg-none container my-4">
                    <button id="offcanvas-toggle-button" class="btn btn-primary d-lg-none" type="button" data-bs-toggle="offcanvas" href="#offcanvasResponsive" aria-controls="offcanvasResponsive">
                        <i class="bi bi-receipt"></i> 테이블 상세 보기
                    </button>
                </div>
                <div class="d-flex justify-content-center align-items-center flex-grow-1" style="min-height: 0;">
                    <div id="grid-container" class="table-grid-container">
                        @for (int y = 0; y < 6; y++)
                        {
                            @for (int x = 0; x < 6; x++)
                            {
                                var cellX = x;
                                var cellY = y;
                                var tableInCell = _tables.FirstOrDefault(t => t.Cell != null && t.Cell.X == cellX && t.Cell.Y == cellY);

                                <div class="grid-cell border bg-body-tertiary" data-x="@cellX" data-y="@cellY">
                                    @if (tableInCell != null)
                                    {
                                        var session = _sessions.FirstOrDefault(x => x.TableId == tableInCell.TableId);
                                        <div class="p-3 table-item d-flex flex-column align-items-center justify-content-center @(session is null ? EmptyTableItemClass : SessionStateToClass(session.State)) text-white text-center position-relative"
                                             data-table-id="@tableInCell.TableId"
                                             @onclick="() => SetTableSessionAsync(tableInCell.TableId)">
                                            <p style="font-size: 16px">@tableInCell.Name</p>
                                            @if (session is not null)
                                            {
                                                <span style="font-size: 12px">세션 #@session.SessionId</span>
                                            }
                                            else
                                            {
                                                <span style="font-size: 12px">빈 테이블</span>
                                            }
                                        </div>
                                    }
                                </div>
                            }
                        }
                    </div>
                </div>
            </main>
            <div class="offcanvas offcanvas-lg offcanvas-end bg-body-tertiary p-lg-4 d-lg-flex side-panel full-height" tabindex="-1" id="offcanvasResponsive" aria-labelledby="offcanvasResponsiveLabel" style="width: 380px!important;">
                <div class="offcanvas-header border-bottom">
                    <h5 class="offcanvas-title" id="offcanvasResponsiveLabel">테이블 상세보기</h5>
                    <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body d-flex flex-column flex-grow-1 overflow-y-auto">
                    <h5 class="mb-1 flex-shrink-0 d-none d-lg-block">테이블 상세보기</h5>
                    @if (_selectedTableId is null)
                    {
                        <div class="flex-grow-1 d-flex flex-column align-items-center justify-content-center text-center text-muted">
                            <i class="bi bi-grid fs-1"></i>
                            <h6>선택된 테이블 없음</h6>
                        </div>
                    }
                    else
                    {
                        if (_selectedTableSession is null)
                        {
                            <div class="flex-grow-1 d-flex flex-column align-items-center justify-content-center text-center text-muted">
                                <i class="bi bi-person-plus-fill fs-1"></i>
                                <h6 class="fw-bold">빈 테이블</h6>
                                <p class="text-muted">이 테이블에 새 세션을 할당하시겠습니까?</p>
                                <button class="btn btn-outline-primary" @onclick="() => OnCreateSessionClickAsync(_selectedTableId.Value)"><i class="bi bi-plus-lg me-2"></i>세션 생성</button>
                            </div>
                        }
                        else
                        {
                            <div class="d-flex justify-content-center align-items-center my-3">
                                <button style="width: 5.5rem" type="button" class="btn @(_selectedOption == OptionContent.SessionManagement ? SelectedOptionClass : OptionClass)" @onclick="() => _selectedOption = OptionContent.SessionManagement">세션 정보</button>
                                <div class="mx-3" style="width: 0.1rem; height: 1.6rem; background: var(--bs-border-color)"></div>
                                <button style="width: 5.5rem" type="button" class="btn @(_selectedOption == OptionContent.ManualOrder ? SelectedOptionClass : OptionClass)" @onclick="() => _selectedOption = OptionContent.ManualOrder">주문 추가</button>
                            </div>
                            @switch (_selectedOption)
                            {
                                case OptionContent.SessionManagement:
                                    <SessionManagement SessionId="_selectedTableSession.SessionId"/>
                                    break;
                                case OptionContent.ManualOrder:
                                    <ManualOrder SessionId="_selectedTableSession.SessionId"/>
                                    break;
                            }
                        }
                    }
                </div>
            </div>
        </div>
    </div>
}