@inherits ModalComponentBase
<div class="d-flex flex-column gap-3">
    
    <div class="card border-0 shadow-sm">
        <div class="card-body">
            <h6 class="card-title mb-2">테이블 이름 변경</h6>
            <div class="input-group input-group-sm">
                <input class="form-control" placeholder="새 이름"
                       @bind="_name" @bind:event="oninput" maxlength="30"/>
                <button class="btn btn-primary"
                        title="이름 변경"
                        @onclick="OnRename">변경</button>
            </div>
            <div class="form-text">
                현재 이름: <strong>@CurrentName</strong> (최대 30자)
            </div>
        </div>
    </div>
    @if (IsReferenced)
    {
        <div class="card border-0 shadow-sm">
            <div class="card-body">
                <h4 class="card-title mb-2">데이터 정합성 경고</h4>
                <p class="fs-6 lh-base fw-light">
                    이 테이블 객체를 참조하는 모든 세션 객체를 제거하기 전까지는 이 객체를 제거할 수 없습니다.
                    <br><br><strong>자세한 사항은 사용자 메뉴얼을 참조하십시오.</strong>
                </p>
            </div>
        </div>
    }
    else
    {
        <div class="card border-0 shadow-sm">
            <div class="card-body">
                <h4 class="card-title mb-2 text-danger">데이터 삭제 경고</h4>
                <p class="fs-6 lh-base fw-light">
                    정말 이 테이블을 삭제하시겠습니까?<br><br>
                    <strong>이 작업은 되돌릴 수 없습니다</strong>
                </p>
            </div>
        </div>
    }

    <div class="d-flex justify-content-end">
        @if (!IsReferenced)
        {
            <button class="btn btn-outline-danger btn-sm me-2"
                    @onclick="OnDelete">
                삭제
            </button>
        }
        <button class="btn btn-secondary btn-sm" @onclick="() => CloseModal(new TableObjectManager.TableManageResult(TableObjectManager.TableManageAction.Cancel, null))">
            닫기
        </button>
    </div>
</div>

@code
{
    [Parameter] public required int TableId { get; set; }
    [Parameter] public required string CurrentName { get; set; } = string.Empty;
    [Parameter] public bool IsReferenced { get; set; }

    private string _name = string.Empty;

    protected override void OnInitialized()
    {
        _name = CurrentName;
    }

    private void OnRename()
    {
        var trimmed = _name.Trim();
        if (string.IsNullOrWhiteSpace(trimmed))
        {
            // 빈 값 방지: 호출 측에서 토스트 띄울 수 있게 Cancel로 닫지 않고 그대로 유지하려면 return
            return;
        }
        if (trimmed.Length > 30) trimmed = trimmed[..30];

        CloseModal(new TableObjectManager.TableManageResult(TableObjectManager.TableManageAction.Rename, trimmed));
    }

    private void OnDelete()
    {
        CloseModal(new TableObjectManager.TableManageResult(TableObjectManager.TableManageAction.Delete, null));
    }
}